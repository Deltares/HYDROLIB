name: ci

on: [push]

jobs:
  CI:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]
        os: [ubuntu-18.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache conda
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('environment.yaml') }}

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: hydrolib
          python-version: ${{ matrix.python-version }}
          environment-file: environment.yaml
          channels: conda-forge,defaults
          channel-priority: true
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
          mamba-version: "*"

      - name: Install dev tools
        shell: bash -l {0}
        run: |
          conda install isort black pytest pytest-cov

      - name: Test with pytest
        shell: bash -l {0}
        run: pytest --cov . --cov-report xml:coverage-reports/coverage-hydrolib.xml --junitxml=xunit-reports/xunit-result-hydrolib.xml

      - name: Autoformat code if the check fails
        if: ${{ (matrix.os == 'ubuntu-18.04') && (matrix.python-version == 3.8) }}
        shell: bash -l {0}
        run: |
          isort .
          black .
          git config --global user.name '${{ github.actor }}'
          git config --global user.email '${{ github.actor }}@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git checkout $GITHUB_HEAD_REF
          git commit -am "autoformat: isort & black" && git push || true

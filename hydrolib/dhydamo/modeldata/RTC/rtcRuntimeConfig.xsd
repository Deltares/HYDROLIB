<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2009 sp1 (http://www.altova.com) by ICT (Stichting Deltares) -->
<schema xmlns:rtc="http://www.wldelft.nl/fews" xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.wldelft.nl/fews" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0">
	<include schemaLocation="rtcSharedTypes.xsd"/>
	<element name="rtcRuntimeConfig" type="rtc:RtcRuntimeConfigComplexType"/>
	<complexType name="RtcRuntimeConfigComplexType">
		<sequence>
			<element name="files" type="rtc:FileComplexType" minOccurs="0">
				<annotation>
					<documentation>Optional provision of input files, if provided ALL relevant input files needs to be defined, if not, the program will check for files with default naming in the current working folder</documentation>
				</annotation>
			</element>
			<element name="period" type="rtc:PeriodComplexType">
				<annotation>
					<documentation>Execution period of the simulation or optimization</documentation>
				</annotation>
			</element>
			<choice minOccurs="0">
				<element name="mode" type="rtc:ModeComplexType">
					<annotation>
						<documentation>Optional definition of the execution mode of the application, default = simulation if not provided</documentation>
					</annotation>
				</element>
				<element name="modes" type="rtc:ModesComplexType"/>
			</choice>
			<element name="parallelization" type="rtc:ParallelizationComplexType" minOccurs="0">
				<annotation>
					<documentation>Optional parallelization settings</documentation>
				</annotation>
			</element>
			<element name="logging" type="rtc:LoggingComplexType" minOccurs="0">
				<annotation>
					<documentation>Logging</documentation>
				</annotation>
			</element>
			<element name="stateFiles" type="rtc:UserDefinedStateExportComplexType" minOccurs="0">
				<annotation>
					<documentation>Optional definition for saving periodic state files</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="FileComplexType">
		<sequence>
			<element name="rtcDataConfig" type="rtc:FileDataComplexType">
				<annotation>
					<documentation>File with the time series model definition</documentation>
				</annotation>
			</element>
			<element name="rtcObjectiveConfig" type="rtc:FileObjectiveComplexType" minOccurs="0">
				<annotation>
					<documentation>Optional file with the definition of an optimization problem including optimization variables, constraints and objective function terms</documentation>
				</annotation>
			</element>
			<element name="rtcParameterConfig" type="rtc:FileParameterComplexType" minOccurs="0" maxOccurs="unbounded">
				<annotation>
					<documentation>Optional file with externalized (scalar) parameters</documentation>
				</annotation>
			</element>
			<element name="rtcScenarioTreeConfig" type="rtc:FileScenarioTreeComplexType" minOccurs="0">
				<annotation>
					<documentation>Optional file with the definition of a scenario tree for the control trajectory in case of multi-stage stochastic optimization problems</documentation>
				</annotation>
			</element>
			<element name="rtcToolsConfig" type="rtc:FileToolsComplexType">
				<annotation>
					<documentation>File with the schematization of the process model, i.e. the model of the water resources systems</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="FileDataComplexType">
		<attribute name="name" type="string" use="required"/>
	</complexType>
	<complexType name="FileObjectiveComplexType">
		<attribute name="name" type="string" use="required"/>
	</complexType>
	<complexType name="FileParameterComplexType">
		<attribute name="name" type="string" use="required"/>
		<attribute name="type" type="rtc:ParameterFileTypeEnumStringType" use="required"/>
		<attribute name="prefix" type="rtc:ParameterFilePrefixEnumStringType" use="optional" default="NONE"/>
	</complexType>
	<complexType name="FileScenarioTreeComplexType">
		<attribute name="name" type="string" use="required"/>
	</complexType>
	<complexType name="FileToolsComplexType">
		<attribute name="name" type="string" use="required"/>
	</complexType>
	<complexType name="PeriodComplexType">
		<choice>
			<element name="userDefined" type="rtc:UserDefinedRuntimeComplexType">
				<annotation>
					<documentation>The execution period is user-defined by start and end time, time step and optionally the number of ensembles.</documentation>
				</annotation>
			</element>
			<element name="PIInput" type="rtc:PIInputRuntimeComplexType">
				<annotation>
					<documentation>The execution period is defined by the first time series of the referred PI-XML file.</documentation>
				</annotation>
			</element>
			<element name="PIRunFile" type="rtc:PIRunFileRuntimeComplexType">
				<annotation>
					<documentation>The execution period is defined in the PI-XML run file.</documentation>
				</annotation>
			</element>
		</choice>
	</complexType>
	<complexType name="UserDefinedRuntimeComplexType">
		<sequence>
			<element name="startDate" type="rtc:DateTimeComplexType">
				<annotation>
					<documentation>Start date and time of the similation.</documentation>
				</annotation>
			</element>
			<element name="endDate" type="rtc:DateTimeComplexType">
				<annotation>
					<documentation>End date and time of the simulation.</documentation>
				</annotation>
			</element>
			<element name="forecastDate" type="rtc:DateTimeComplexType" minOccurs="0">
				<annotation>
					<documentation>Forecast date and time of the simulation.</documentation>
				</annotation>
			</element>
			<element name="timeStep" type="rtc:TimeStepComplexType">
				<annotation>
					<documentation>Time step of the simulation (till now, the model supports only equidistant time steps)</documentation>
				</annotation>
			</element>
			<element name="numberEnsembles" type="int" default="1" minOccurs="0">
				<annotation>
					<documentation>Optional number of ensemble of the simulation. If not provided, one ensemble member is assumed.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="PIInputRuntimeComplexType">
		<sequence>
			<element name="file" type="string"/>
			<element name="numberEnsembles" type="int" default="1" minOccurs="0">
				<annotation>
					<documentation>optional number of ensemble, if not provides one ensemble member is assumed</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="PIRunFileRuntimeComplexType">
		<sequence>
			<element name="file" type="string"/>
			<element name="timeStep" type="rtc:TimeStepComplexType">
				<annotation>
					<documentation>Time step of the simulation (till now, the model supports only equidistant time steps)</documentation>
				</annotation>
			</element>
			<element name="numberEnsembles" type="int" default="1" minOccurs="0">
				<annotation>
					<documentation>optional number of ensemble, if not provides one ensemble member is assumed</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="ModesComplexType">
		<sequence>
			<element name="mode" type="rtc:ModeComplexType" maxOccurs="unbounded"/>
		</sequence>
	</complexType>
	<complexType name="ModeComplexType">
		<choice>
			<element name="simulation" type="rtc:ModeSimulationComplexType">
				<annotation>
					<documentation>Simulation mode (default)</documentation>
				</annotation>
			</element>
			<element name="firstOrderSensitivity" type="string">
				<annotation>
					<documentation>Calculation of first-order model sensitivities of an objective function value with respect to inputs, states and outputs (requires the definition of an objective function in the rtcObjectiveConfig.xml)</documentation>
				</annotation>
			</element>
			<element name="optimization" type="rtc:ModeOptimizationComplexType">
				<annotation>
					<documentation>Optimization mode (requires the definition of an optimization problem in the rtcObjectiveConfig.xml)</documentation>
				</annotation>
			</element>
			<element name="closedLoop" type="rtc:ModeClosedLoopComplexType">
				<annotation>
					<documentation>Closed loop mode with an alternating switch between simulation and optimization</documentation>
				</annotation>
			</element>
			<element name="postprocessing" type="string"/>
		</choice>
	</complexType>
	<complexType name="ModeSimulationComplexType">
		<sequence>
			<element name="period" type="rtc:PeriodEnumStringType" default="COMPLETE" minOccurs="0"/>
			<element name="limitedMemory" type="boolean" minOccurs="0">
				<annotation>
					<documentation>limited-memory option for time series matrix</documentation>
				</annotation>
			</element>
			<element name="executeObjectiveFunction" type="boolean" default="true" minOccurs="0"/>
			<element name="executeConstraints" type="boolean" default="true" minOccurs="0"/>
		</sequence>
	</complexType>
	<complexType name="ModeOptimizationComplexType">
		<sequence>
			<element name="period" type="rtc:PeriodEnumStringType" default="COMPLETE" minOccurs="0"/>
			<choice>
				<element name="optimizer" type="rtc:OptimizerComplexType" maxOccurs="unbounded">
					<annotation>
						<documentation>Selection of one or more optimizer settings for solving the optimization problem</documentation>
					</annotation>
				</element>
			</choice>
			<element name="optimizerMode" type="rtc:OptimizerModeEnumStringType" minOccurs="0">
				<annotation>
					<documentation>Mode for defining more robust hybrid optimizer settings for running optimizations sequentially (optimimum of the first is input for the next) or parallel (independent optimization, best one is returned), STILL NOT IMPLEMENTED</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="OptimizerComplexType">
		<choice>
			<element name="GAMS" type="rtc:GAMSComplexType">
				<annotation>
					<documentation>This option generates a GAMS optimization problem with an external model in RTC-Tools. Note that you need to run the optimization in GAMS after executing the stand alone RTC-Tools.</documentation>
				</annotation>
			</element>
			<element name="IPOPT" type="rtc:IPOPTComplexType">
				<annotation>
					<documentation>Optimization by the IPOPT optimizer, check also the related documentation on the COIN-OR website</documentation>
				</annotation>
			</element>
			<element name="SA" type="rtc:SAComplexType">
				<annotation>
					<documentation>Optimization by a simulated annealing optimizer (NOT FULLY IMPLEMENTED right now)</documentation>
				</annotation>
			</element>
		</choice>
	</complexType>
	<complexType name="GAMSComplexType">
		<sequence>
			<element name="algorithm" default="ipopth" minOccurs="0">
				<simpleType>
					<restriction base="string">
						<enumeration value="ipopt"/>
						<enumeration value="ipopth"/>
						<enumeration value="conopt"/>
					</restriction>
				</simpleType>
			</element>
		</sequence>
	</complexType>
	<complexType name="IPOPTComplexType">
		<sequence>
			<element name="output" type="rtc:IPOPTOutputComplexType">
				<annotation>
					<documentation>Output options</documentation>
				</annotation>
			</element>
			<element name="termination" type="rtc:IPOPTTerminationComplexType">
				<annotation>
					<documentation>Termination criteria</documentation>
				</annotation>
			</element>
			<element name="nlpScaling" type="rtc:IPOPTNLPScalingComplexType">
				<annotation>
					<documentation>Scaling options for the optimization problem</documentation>
				</annotation>
			</element>
			<element name="nlp" type="rtc:IPOPTNLPComplexType">
				<annotation>
					<documentation>Settings of the nonlinear optimizer</documentation>
				</annotation>
			</element>
			<element name="initialization" type="rtc:IPOPTInitializationComplexType"/>
			<element name="barrierParameter" type="rtc:IPOPTBarrierParameterComplexType"/>
			<element name="multiplierUpdates" type="rtc:IPOPTMultiplierUpdatesComplexType"/>
			<element name="lineSearch" type="rtc:IPOPTLineSearchComplexType"/>
			<element name="warmStart" type="rtc:IPOPTWarmStartComplexType"/>
			<element name="restorationPhase" type="rtc:IPOPTRestorationPhaseComplexType"/>
			<element name="linearSolver" type="rtc:IPOPTLinearSolverComplexType">
				<annotation>
					<documentation>Settings and selection of the integrated linear equation solver </documentation>
				</annotation>
			</element>
			<element name="hessianPermutation" type="rtc:IPOPTHessianPermutationComplexType">
				<annotation>
					<documentation>Optional hessian settings</documentation>
				</annotation>
			</element>
			<element name="quasiNewton" type="rtc:IPOPTQuasiNewtonComplexType"/>
			<element name="derivativeChecker" type="rtc:IPOPTDerivativeCheckerComplexType">
				<annotation>
					<documentation>Optional derivative checker</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="IPOPTOutputComplexType">
		<sequence>
			<element name="print_level" default="5" minOccurs="0">
				<annotation>
					<documentation>Output verbosity level 0-12,      NONE=0
     ERROR=1
     STRONGWARNING=2
     SUMMARY=3
     WARNING=4
     ITERSUMMARY=5
     DETAILED=6
     MOREDETAILED=7
     VECTOR=8
     MOREVECTOR=9
     MATRIX=10
     MOREMATRIX=11
     ALL=12</documentation>
				</annotation>
				<simpleType>
					<restriction base="integer">
						<minInclusive value="0"/>
						<maxInclusive value="12"/>
					</restriction>
				</simpleType>
			</element>
			<element name="print_user_options" default="yes" minOccurs="0">
				<annotation>
					<documentation>Print all options set by the user [no/yes]</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="yes"/>
						<enumeration value="no"/>
					</restriction>
				</simpleType>
			</element>
			<element name="print_options_documentation" default="no" minOccurs="0">
				<annotation>
					<documentation>Switch to print all algorithmic options [no/yes]</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="yes"/>
						<enumeration value="no"/>
					</restriction>
				</simpleType>
			</element>
			<element name="print_timing_statistics" default="no" minOccurs="0">
				<annotation>
					<documentation>Switch to print timing statistics [no/yes]</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="yes"/>
						<enumeration value="no"/>
					</restriction>
				</simpleType>
			</element>
			<element name="file_print_level" default="5" minOccurs="0">
				<annotation>
					<documentation>Verbosity level for output file 0-12                                   NONE=0
     ERROR=1
     STRONGWARNING=2
     SUMMARY=3
     WARNING=4
     ITERSUMMARY=5
     DETAILED=6
     MOREDETAILED=7
     VECTOR=8
     MOREVECTOR=9
     MATRIX=10
     MOREMATRIX=11
     ALL=12</documentation>
				</annotation>
				<simpleType>
					<restriction base="integer">
						<minInclusive value="0"/>
						<maxInclusive value="12"/>
					</restriction>
				</simpleType>
			</element>
		</sequence>
	</complexType>
	<complexType name="IPOPTTerminationComplexType">
		<sequence>
			<element name="tol" type="rtc:ExternalParameterSimpleType" default="1e-8" minOccurs="0">
				<annotation>
					<documentation>Desired convergence tolerance (relative)</documentation>
				</annotation>
			</element>
			<element name="max_iter" type="rtc:ExternalIntegerSimpleType" default="3000" minOccurs="0">
				<annotation>
					<documentation>Maximum number of iterations</documentation>
				</annotation>
			</element>
			<element name="max_cpu_time" type="rtc:ExternalParameterSimpleType" default="1e6" minOccurs="0">
				<annotation>
					<documentation>Maximum number of CPU seconds</documentation>
				</annotation>
			</element>
			<element name="dual_inf_tol" type="rtc:ExternalParameterSimpleType" default="1.0" minOccurs="0">
				<annotation>
					<documentation>Desired threshold for the dual infeasibility</documentation>
				</annotation>
			</element>
			<element name="constr_viol_tol" type="rtc:ExternalParameterSimpleType" default="0.0001" minOccurs="0">
				<annotation>
					<documentation>Desired threshold for the constraint violation</documentation>
				</annotation>
			</element>
			<element name="compl_inf_tol" type="rtc:ExternalParameterSimpleType" default="0.0001" minOccurs="0">
				<annotation>
					<documentation>Desired threshold for the complementarity conditions</documentation>
				</annotation>
			</element>
			<element name="acceptable_tol" type="rtc:ExternalParameterSimpleType" default="1e-6" minOccurs="0">
				<annotation>
					<documentation>"Acceptable" convergence tolerance (relative)</documentation>
				</annotation>
			</element>
			<element name="acceptable_iter" type="rtc:ExternalIntegerSimpleType" default="15" minOccurs="0">
				<annotation>
					<documentation>Number of "acceptable" iterates before triggering termination</documentation>
				</annotation>
			</element>
			<element name="acceptable_constr_viol_tol" type="rtc:ExternalParameterSimpleType" default="0.01" minOccurs="0">
				<annotation>
					<documentation>"Acceptance" threshold for the constraint violation</documentation>
				</annotation>
			</element>
			<element name="acceptable_dual_inf_tol" type="rtc:ExternalParameterSimpleType" default="1e10" minOccurs="0">
				<annotation>
					<documentation>"Acceptance" threshold for the dual infeasibility</documentation>
				</annotation>
			</element>
			<element name="acceptable_compl_inf_tol" type="rtc:ExternalParameterSimpleType" default="0.01" minOccurs="0">
				<annotation>
					<documentation>"Acceptance" threshold for the complementarity conditions</documentation>
				</annotation>
			</element>
			<element name="acceptable_obj_change_tol" type="rtc:ExternalParameterSimpleType" default="1e20" minOccurs="0">
				<annotation>
					<documentation>"Acceptance" stopping criterion based on objective function change</documentation>
				</annotation>
			</element>
			<element name="diverging_iterates_tol" type="rtc:ExternalParameterSimpleType" default="1e20" minOccurs="0">
				<annotation>
					<documentation>Threshold for maximal value of primal iterates</documentation>
				</annotation>
			</element>
			<element name="treat_unsuccess_as_error" type="rtc:ExternalBooleanSimpleType" default="false" minOccurs="0">
				<annotation>
					<documentation>Other return codes than SUCESS are treated as error message</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="IPOPTNLPScalingComplexType">
		<sequence>
			<element name="obj_scaling_factor" type="rtc:ExternalParameterSimpleType" default="1.0" minOccurs="0">
				<annotation>
					<documentation>Scaling factor for the objective function</documentation>
				</annotation>
			</element>
			<element name="nlp_scaling_method" default="gradient-based" minOccurs="0">
				<annotation>
					<documentation>Select the technique used for scaling the NLP</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="none"/>
						<enumeration value="user-scaling"/>
						<enumeration value="gradient-based"/>
					</restriction>
				</simpleType>
			</element>
			<element name="nlp_scaling_max_gradient" default="100.0" minOccurs="0">
				<annotation>
					<documentation>Maximum gradient after NLP scaling</documentation>
				</annotation>
				<simpleType>
					<restriction base="double">
						<minExclusive value="0.0"/>
					</restriction>
				</simpleType>
			</element>
			<element name="nlp_scaling_min_value" default="1e-8" minOccurs="0">
				<annotation>
					<documentation>Maximum gradient after NLP scaling</documentation>
				</annotation>
				<simpleType>
					<restriction base="double">
						<minInclusive value="0.0"/>
					</restriction>
				</simpleType>
			</element>
		</sequence>
	</complexType>
	<complexType name="IPOPTNLPComplexType">
		<sequence>
			<element name="bound_relax_factor" default="1e-8" minOccurs="0">
				<annotation>
					<documentation>Factor for initial relaxation of the bounds</documentation>
				</annotation>
				<simpleType>
					<restriction base="double">
						<minInclusive value="0.0"/>
					</restriction>
				</simpleType>
			</element>
			<element name="honor_original_bounds" default="yes" minOccurs="0">
				<annotation>
					<documentation>Indicates whether final points should be projected into original bounds [no/yes]</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="yes"/>
						<enumeration value="no"/>
					</restriction>
				</simpleType>
			</element>
			<element name="check_derivatives_for_naninf" default="no" minOccurs="0">
				<annotation>
					<documentation>Indicates whether it is desired to check for Nan/Inf in derivative matrices [no/yes]</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="yes"/>
						<enumeration value="no"/>
					</restriction>
				</simpleType>
			</element>
			<element name="fixed_variable_treatment" default="make_parameter" minOccurs="0">
				<annotation>
					<documentation>Determines how fixed variables should be handled</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="make_parameter"/>
						<enumeration value="make_constraint"/>
						<enumeration value="relax_bounds"/>
					</restriction>
				</simpleType>
			</element>
			<element name="jac_c_constant" default="no" minOccurs="0">
				<annotation>
					<documentation>Indicates whether all equality constraints are linear [no/yes]</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="yes"/>
						<enumeration value="no"/>
					</restriction>
				</simpleType>
			</element>
			<element name="jac_d_constant" default="no" minOccurs="0">
				<annotation>
					<documentation>Indicates whether all inequality constraints are linear [no/yes]</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="yes"/>
						<enumeration value="no"/>
					</restriction>
				</simpleType>
			</element>
		</sequence>
	</complexType>
	<complexType name="IPOPTLinearSolverComplexType">
		<sequence>
			<element name="linear_solver" default="mumps" minOccurs="0">
				<annotation>
					<documentation>Linear solver used for step computations</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="ma27"/>
						<enumeration value="ma57"/>
						<enumeration value="ma77"/>
						<enumeration value="ma86"/>
						<enumeration value="ma97"/>
						<enumeration value="mumps"/>
						<enumeration value="pardiso"/>
					</restriction>
				</simpleType>
			</element>
			<element name="linear_system_scaling" default="none" minOccurs="0">
				<annotation>
					<documentation>Method for scaling the linear system. 
Determines the method used to compute symmetric scaling factors for the augmented system (see also the "linear_scaling_on_demand" option). This scaling is independent of the NLP problem scaling. By default, MC19 is only used if MA27 or MA57 are selected as linear solvers. This value is only available if Ipopt has been compiled with MC19. The default value for this string option is "mc19". </documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="none"/>
						<enumeration value="mc19"/>
						<enumeration value="slack-based"/>
					</restriction>
				</simpleType>
			</element>
			<element name="linear_scaling_on_demand" default="yes" minOccurs="0">
				<annotation>
					<documentation>Flag indicating that linear scaling is only done if it seems required. 
This option is only important if a linear scaling method (e.g., mc19) is used. If you choose "no", then the scaling factors are computed for every linear system from the start. This can be quite expensive. Choosing "yes" means that the algorithm will start the scaling method only when the solutions to the linear system seem not good, and then use it until the end. The default value for this string option is "yes". </documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="yes"/>
						<enumeration value="no"/>
					</restriction>
				</simpleType>
			</element>
			<element name="min_refinement_steps" type="int" default="1" minOccurs="0">
				<annotation>
					<documentation>Minimum number of iterative refinement steps per linear system solve. 
Iterative refinement (on the full unsymmetric system) is performed for each right hand side. This option determines the minimum number of iterative refinements (i.e. at least "min_refinement_steps" iterative refinement steps are enforced per right hand side.) The valid range for this integer option is  [0,+inf] and its default value is 10.
				 </documentation>
				</annotation>
			</element>
			<element name="max_refinement_steps" type="int" default="10" minOccurs="0">
				<annotation>
					<documentation>Maximum number of iterative refinement steps per linear system solve. 
Iterative refinement (on the full unsymmetric system) is performed for each right hand side. This option determines the maximum number of iterative refinements (i.e. at least "min_refinement_steps" iterative refinement steps are enforced per right hand side.) The valid range for this integer option is  [0,+inf] and its default value is 1.
				 </documentation>
				</annotation>
			</element>
			<element name="ma27" type="rtc:MA27ComplexType" minOccurs="0"/>
			<element name="ma57" type="rtc:MA57ComplexType" minOccurs="0"/>
			<element name="ma77" type="rtc:MA77ComplexType" minOccurs="0"/>
			<element name="ma86" type="rtc:MA86ComplexType" minOccurs="0"/>
			<element name="ma97" type="rtc:MA97ComplexType" minOccurs="0"/>
			<element name="mumps" type="rtc:MUMPSComplexType" minOccurs="0"/>
			<element name="pardiso" type="rtc:PardisoComplexType" minOccurs="0"/>
		</sequence>
	</complexType>
	<complexType name="MA27ComplexType">
		<sequence>
			<element name="ma27_pivtol" type="double" default="1e-8" minOccurs="0">
				<annotation>
					<documentation>Pivot tolerance for the linear solver MA27. 
A smaller number pivots for sparsity, a larger number pivots for stability. This option is only available if Ipopt has been compiled with MA27. The valid range for this real option is [0,1] and its default value is  1e-8.</documentation>
				</annotation>
			</element>
			<element name="ma27_pivtolmax" type="double" default="0.0001" minOccurs="0">
				<annotation>
					<documentation>Maximum pivot tolerance for the linear solver MA27. 
Ipopt may increase pivtol as high as ma27_pivtolmax to get a more accurate solution to the linear system. This option is only available if Ipopt has been compiled with MA27. The valid range for this real option is  [0,1] and its default value is 0.0001.</documentation>
				</annotation>
			</element>
			<element name="ma27_liw_init_factor" type="double" default="5" minOccurs="0">
				<annotation>
					<documentation>Integer workspace memory for MA27. 
The initial integer workspace memory = liw_init_factor * memory required by unfactored system. Ipopt will increase the workspace size by meminc_factor if required. This option is only available if Ipopt has been compiled with MA27. The valid range for this real option is [1, inf] and its default value is 5.</documentation>
				</annotation>
			</element>
			<element name="ma27_la_init_factor" type="double" default="5" minOccurs="0">
				<annotation>
					<documentation>Real workspace memory for MA27. 
The initial real workspace memory = la_init_factor * memory required by unfactored system. Ipopt will increase the workspace size by meminc_factor if required. This option is only available if Ipopt has been compiled with MA27. The valid range for this real option is  [1, inf] and its default value is 5.</documentation>
				</annotation>
			</element>
			<element name="ma27_meminc_factor" type="double" default="2" minOccurs="0">
				<annotation>
					<documentation>Increment factor for workspace size for MA27. 
If the integer or real workspace is not large enough, Ipopt will increase its size by this factor. This option is only available if Ipopt has been compiled with MA27. The valid range for this real option is [1, inf] and its default value is 2.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="MA57ComplexType">
		<sequence>
			<element name="ma57_pivtol" type="double" default="1e-8" minOccurs="0">
				<annotation>
					<documentation>Pivot tolerance for the linear solver MA57. 
A smaller number pivots for sparsity, a larger number pivots for stability. This option is only available if Ipopt has been compiled with MA57. The valid range for this real option is [0,1] and its default value is  1e-8.</documentation>
				</annotation>
			</element>
			<element name="ma57_pivtolmax" type="double" default="0.0001" minOccurs="0">
				<annotation>
					<documentation>Maximum pivot tolerance for the linear solver MA57. 
Ipopt may increase pivtol as high as ma57_pivtolmax to get a more accurate solution to the linear system. This option is only available if Ipopt has been compiled with MA57. The valid range for this real option is  [0,1] and its default value is 0.0001.</documentation>
				</annotation>
			</element>
			<element name="ma57_pre_alloc" type="double" default="1.05" minOccurs="0">
				<annotation>
					<documentation>Safety factor for work space memory allocation for the linear solver MA57. 
If 1 is chosen, the suggested amount of work space is used. However, choosing a larger number might avoid reallocation if the suggest values do not suffice. This option is only available if Ipopt has been compiled with MA57. The valid range for this real option is  [1, inf]  and its default value is 1.05.</documentation>
				</annotation>
			</element>
			<element name="ma57_pivot_order" type="int" default="5" minOccurs="0">
				<annotation>
					<documentation>Controls pivot order in MA57 
This is ICNTL(6) in MA57. The valid range for this integer option is [0,5] and its default value is 5.</documentation>
				</annotation>
			</element>
			<element name="ma57_automatic_scaling" default="no" minOccurs="0">
				<annotation>
					<documentation>Controls MA57 automatic scaling 
This option controls the internal scaling option of MA57. For higher reliability of the MA57 solver, you may want to set this option to yes. This is ICNTL(15) in MA57. The default value for this string option is "no". 
Possible values:
no: Do not scale the linear system matrix
yes: Scale the linear system matrix</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="yes"/>
						<enumeration value="no"/>
					</restriction>
				</simpleType>
			</element>
			<element name="ma57_block_size" type="int" default="16" minOccurs="0">
				<annotation>
					<documentation>Controls block size used by Level 3 BLAS in MA57BD 
This is ICNTL(11) in MA57. The valid range for this integer option is [1, inf] and its default value is 16. .</documentation>
				</annotation>
			</element>
			<element name="ma57_node_amalgamation" type="int" default="16" minOccurs="0">
				<annotation>
					<documentation>Node amalgamation parameter 
This is ICNTL(12) in MA57. The valid range for this integer option is  [1, inf] and its default value is 16.</documentation>
				</annotation>
			</element>
			<element name="ma57_small_pivot_flag" type="int" default="0" minOccurs="0">
				<annotation>
					<documentation>If set to 1, then when small entries defined by CNTL(2) are detected they are removed and the corresponding pivots placed at the end of the factorization. This can be particularly efficient if the matrix is highly rank deficient. 
This is ICNTL(16) in MA57. The valid range for this integer option is  [0,1] and its default value is 0.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="MA86ComplexType">
		<sequence>
			<element name="ma86_print_level" type="int" default="-1" minOccurs="0">
				<annotation>
					<documentation>Debug printing level for the linear solver ma86 
The valid range for this integer option is  [-inf, +inf] and its default value is -1.</documentation>
				</annotation>
			</element>
			<element name="ma86_nemin" type="int" default="32" minOccurs="0">
				<annotation>
					<documentation>Node Amalgamation parameter 
Two nodes in elimination tree are merged if result has fewer than ma86_nemin variables. The valid range for this integer option is [1, inf] and its default value is 32.</documentation>
				</annotation>
			</element>
			<element name="ma86_order" default="auto" minOccurs="0">
				<annotation>
					<documentation>CControls type of ordering used by HSL_MA86 
This option controls ordering for the solver HSL_MA86. The default value for this string option is "auto". 
Possible values:
auto: Try both AMD and MeTiS, pick best
amd: Use the HSL_MC68 approximate minimum degree algorithm
metis: Use the MeTiS nested dissection algorithm (if available)</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="auto"/>
						<enumeration value="amd"/>
						<enumeration value="metis"/>
					</restriction>
				</simpleType>
			</element>
			<element name="ma86_scaling" default="mc64" minOccurs="0">
				<annotation>
					<documentation>Controls scaling of matrix 
This option controls scaling for the solver HSL_MA86. The default value for this string option is "mc64". 
Possible values:
none: Do not scale the linear system matrix
mc64: Scale linear system matrix using MC64
mc77: Scale linear system matrix using MC77 [1,3,0]</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="mone"/>
						<enumeration value="mc64"/>
						<enumeration value="mc77"/>
					</restriction>
				</simpleType>
			</element>
			<element name="ma86_small" type="double" default="1e-20" minOccurs="0">
				<annotation>
					<documentation>Zero Pivot Threshold 
Any pivot less than ma86_small is treated as zero. The valid range for this real option is  [0, inf] and its default value is 1e-20.</documentation>
				</annotation>
			</element>
			<element name="ma86_static" type="double" default="0" minOccurs="0">
				<annotation>
					<documentation>Static Pivoting Threshold 
See ma86 documentation. Either ma86_static=0.0 or ma86_static>ma86_small. ma86_static=0.0 disables static pivoting. The valid range for this real option is [0, inf] and its default value is 0 .</documentation>
				</annotation>
			</element>
			<element name="ma86_u" type="double" default="1e-8" minOccurs="0">
				<annotation>
					<documentation>Pivoting Threshold 
See ma86 documentation. The valid range for this real option is  [0, 0.5] and its default value is 1e-8.</documentation>
				</annotation>
			</element>
			<element name="ma86_umax" type="double" default="0.0001" minOccurs="0">
				<annotation>
					<documentation>Maximum Pivoting Threshold 
Maximum value to which u will be increased to improve quality. The valid range for this real option is  [0, 0.5] and its default value is 0.0001.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="MA77ComplexType">
		<sequence>
			<element name="ma77_print_level" type="int" default="-1" minOccurs="0">
				<annotation>
					<documentation>Debug printing level for the linear solver MA77 
The valid range for this integer option is  [-inf, +inf] and its default value is -1.</documentation>
				</annotation>
			</element>
			<element name="ma77_buffer_lpage" type="int" default="4096" minOccurs="0">
				<annotation>
					<documentation>Number of scalars per MA77 buffer page 
Number of scalars per an in-core buffer in the out-of-core solver MA77. Must be at most ma77_file_size. The valid range for this integer option is [1, inf] and its default value is 4096.</documentation>
				</annotation>
			</element>
			<element name="ma77_buffer_npage" type="int" default="1600" minOccurs="0">
				<annotation>
					<documentation>Number of pages that make up MA77 buffer 
Number of pages of size buffer_lpage that exist in-core for the out-of-core solver MA77. The valid range for this integer option is [1, inf] and its default value is 1600.</documentation>
				</annotation>
			</element>
			<element name="ma77_file_size" type="int" default="2097152" minOccurs="0">
				<annotation>
					<documentation>Target size of each temporary file for MA77, scalars per type 
MA77 uses many temporary files, this option controls the size of each one. It is measured in the number of entries (int or double), NOT bytes. The valid range for this integer option is [1, inf] and its default value is 2097152.</documentation>
				</annotation>
			</element>
			<element name="ma77_maxstore" type="int" default="0" minOccurs="0">
				<annotation>
					<documentation>Maximum storage size for MA77 in-core mode 
If greater than zero, the maximum size of factors stored in core before out-of-core mode is invoked. The valid range for this integer option is [0, inf] and its default value is 0</documentation>
				</annotation>
			</element>
			<element name="ma77_nemin" type="int" default="8" minOccurs="0">
				<annotation>
					<documentation>Node Amalgamation parameter 
Two nodes in elimination tree are merged if result has fewer than ma77_nemin variables. The valid range for this integer option is [1, inf] and its default value is 8.</documentation>
				</annotation>
			</element>
			<element name="ma77_order" default="metis" minOccurs="0">
				<annotation>
					<documentation>Controls type of ordering used by HSL_MA77 
This option controls ordering for the solver HSL_MA77. The default value for this string option is "metis". 
Possible values:
amd: Use the HSL_MC68 approximate minimum degree algorithm
metis: Use the MeTiS nested dissection algorithm (if available)</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="amd"/>
						<enumeration value="metis"/>
					</restriction>
				</simpleType>
			</element>
			<element name="ma77_small" type="double" default="1e-20" minOccurs="0">
				<annotation>
					<documentation>Zero Pivot Threshold 
Any pivot less than ma77_small is treated as zero. The valid range for this real option is  [0, inf] and its default value is 1e-20.</documentation>
				</annotation>
			</element>
			<element name="ma77_static" type="double" default="0" minOccurs="0">
				<annotation>
					<documentation>Static Pivoting Threshold 
See MA77 documentation. Either ma77_static=0.0 or ma77_static>ma77_small. ma77_static=0.0 disables static pivoting. The valid range for this real option is [0, inf] and its default value is 0 .</documentation>
				</annotation>
			</element>
			<element name="ma77_u" type="double" default="1e-8" minOccurs="0">
				<annotation>
					<documentation>Pivoting Threshold 
See MA77 documentation. The valid range for this real option is  [0, 0.5] and its default value is 1e-8.</documentation>
				</annotation>
			</element>
			<element name="ma77_umax" type="double" default="0.0001" minOccurs="0">
				<annotation>
					<documentation>Maximum Pivoting Threshold 
Maximum value to which u will be increased to improve quality. The valid range for this real option is  [0, 0.5]and its default value is 0.0001.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="MA97ComplexType">
		<sequence>
			<element name="ma97_print_level" type="int" default="0" minOccurs="0">
				<annotation>
					<documentation>Debug printing level for the linear solver MA97 
The valid range for this integer option is  [-inf, +inf] and its default value is 0.</documentation>
				</annotation>
			</element>
			<element name="ma97_nemin" type="int" default="8" minOccurs="0">
				<annotation>
					<documentation>Node Amalgamation parameter 
Two nodes in elimination tree are merged if result has fewer than ma97_nemin variables. The valid range for this integer option is [1, inf] and its default value is 8.</documentation>
				</annotation>
			</element>
			<element name="ma97_order" default="auto" minOccurs="0">
				<annotation>
					<documentation>Controls type of ordering used by HSL_MA97 
The default value for this string option is "auto". 
Possible values:
auto: Use HSL_MA97 heuristic to guess best of AMD and METIS
best: Try both AMD and MeTiS, pick best
amd: Use the HSL_MC68 approximate minimum degree algorithm
metis: Use the MeTiS nested dissection algorithm
matched-auto: Use the HSL_MC80 matching with heuristic choice of AMD or METIS
matched-metis: Use the HSL_MC80 matching based ordering with METIS
matched-amd: Use the HSL_MC80 matching based ordering with AMD</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="auto"/>
						<enumeration value="best"/>
						<enumeration value="amd"/>
						<enumeration value="metis"/>
						<enumeration value="matched-auto"/>
						<enumeration value="matched-metis"/>
						<enumeration value="matched-amd"/>
					</restriction>
				</simpleType>
			</element>
			<element name="ma97_scaling" default="dynamic" minOccurs="0">
				<annotation>
					<documentation>Specifies strategy for scaling in HSL_MA97 linear solver 
The default value for this string option is "dynamic". 
Possible values:
none: Do not scale the linear system matrix
mc30: Scale all linear system matrices using MC30
mc64: Scale all linear system matrices using MC64
mc77: Scale all linear system matrices using MC77 [1,3,0]
dynamic: Dynamically select scaling according to rules specified by ma97_scalingX and ma97_switchX options.</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="none"/>
						<enumeration value="mc30"/>
						<enumeration value="mc64"/>
						<enumeration value="mc77"/>
						<enumeration value="dynamic"/>
					</restriction>
				</simpleType>
			</element>
			<element name="ma97_scaling1" default="mc64" minOccurs="0">
				<annotation>
					<documentation>First scaling. 
If ma97_scaling=dynamic, this scaling is used according to the trigger ma97_switch1. If ma97_switch2 is triggered it is disabled. The default value for this string option is "mc64". 
Possible values:
none: No scaling
mc30: Scale linear system matrix using MC30
mc64: Scale linear system matrix using MC64
mc77: Scale linear system matrix using MC77 [1,3,0]</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="none"/>
						<enumeration value="mc30"/>
						<enumeration value="mc64"/>
						<enumeration value="mc77"/>
					</restriction>
				</simpleType>
			</element>
			<element name="ma97_scaling2" default="mc64" minOccurs="0">
				<annotation>
					<documentation>Second scaling. 
If ma97_scaling=dynamic, this scaling is used according to the trigger ma97_switch2. If ma97_switch3 is triggered it is disabled. The default value for this string option is "mc64". 
Possible values:
none: No scaling
mc30: Scale linear system matrix using MC30
mc64: Scale linear system matrix using MC64
mc77: Scale linear system matrix using MC77 [1,3,0]</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="none"/>
						<enumeration value="mc30"/>
						<enumeration value="mc64"/>
						<enumeration value="mc77"/>
					</restriction>
				</simpleType>
			</element>
			<element name="ma97_scaling3" default="mc64" minOccurs="0">
				<annotation>
					<documentation>Third scaling. 
If ma97_scaling=dynamic, this scaling is used according to the trigger ma97_switch3. The default value for this string option is "mc64". 
Possible values:
none: No scaling
mc30: Scale linear system matrix using MC30
mc64: Scale linear system matrix using MC64
mc77: Scale linear system matrix using MC77 [1,3,0]</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="none"/>
						<enumeration value="mc30"/>
						<enumeration value="mc64"/>
						<enumeration value="mc77"/>
					</restriction>
				</simpleType>
			</element>
			<element name="ma97_small" type="double" default="1e-20" minOccurs="0">
				<annotation>
					<documentation>Zero Pivot Threshold 
Any pivot less than ma77_small is treated as zero. The valid range for this real option is  [0, inf] and its default value is 1e-20.</documentation>
				</annotation>
			</element>
			<element name="ma97_solve_blas3" default="no" minOccurs="0">
				<annotation>
					<documentation>Controls if blas2 or blas3 routines are used for solve 
The default value for this string option is "no". 
Possible values:
no: Use BLAS2 (faster, some implementations bit incompatible)
yes: Use BLAS3 (slower)</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="no"/>
						<enumeration value="yes"/>
					</restriction>
				</simpleType>
			</element>
			<element name="ma97_switch1" default="od_hd_reuse" minOccurs="0">
				<annotation>
					<documentation>First switch, determine when ma97_scaling1 is enabled. 
If ma97_scaling=dynamic, ma97_scaling1 is enabled according to this condition. If ma97_switch2 occurs this option is henceforth ignored. The default value for this string option is "od_hd_reuse". 
Possible values:
never: Scaling is never enabled.
at_start: Scaling to be used from the very start.
at_start_reuse: Scaling to be used on first iteration, then reused thereafter.
on_demand: Scaling to be used after Ipopt request improved solution (i.e. iterative refinement has failed).
on_demand_reuse: As on_demand, but reuse scaling from previous itr
high_delay: Scaling to be used after more than 0.05*n delays are present
high_delay_reuse: Scaling to be used only when previous itr created more that 0.05*n additional delays, otherwise reuse scaling from previous itr
od_hd: Combination of on_demand and high_delay
od_hd_reuse: Combination of on_demand_reuse and high_delay_reuse</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="never"/>
						<enumeration value="at_start"/>
						<enumeration value="at_start_reuse"/>
						<enumeration value="on_demand"/>
						<enumeration value="on_demand_reuse"/>
						<enumeration value="high_delay"/>
						<enumeration value="high_delay_reuse"/>
						<enumeration value="od_hd"/>
						<enumeration value="od_hd_reuse"/>
					</restriction>
				</simpleType>
			</element>
			<element name="ma97_switch2" default="never" minOccurs="0">
				<annotation>
					<documentation>Second switch, determine when ma97_scaling2 is enabled. 
If ma97_scaling=dynamic, ma97_scaling2 is enabled according to this condition. If ma97_switch3 occurs this option is henceforth ignored. The default value for this string option is "never". 
Possible values:
never: Scaling is never enabled.
at_start: Scaling to be used from the very start.
at_start_reuse: Scaling to be used on first iteration, then reused thereafter.
on_demand: Scaling to be used after Ipopt request improved solution (i.e. iterative refinement has failed).
on_demand_reuse: As on_demand, but reuse scaling from previous itr
high_delay: Scaling to be used after more than 0.05*n delays are present
high_delay_reuse: Scaling to be used only when previous itr created more that 0.05*n additional delays, otherwise reuse scaling from previous itr
od_hd: Combination of on_demand and high_delay
od_hd_reuse: Combination of on_demand_reuse and high_delay_reuse</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="never"/>
						<enumeration value="at_start"/>
						<enumeration value="at_start_reuse"/>
						<enumeration value="on_demand"/>
						<enumeration value="on_demand_reuse"/>
						<enumeration value="high_delay"/>
						<enumeration value="high_delay_reuse"/>
						<enumeration value="od_hd"/>
						<enumeration value="od_hd_reuse"/>
					</restriction>
				</simpleType>
			</element>
			<element name="ma97_switch3" default="never" minOccurs="0">
				<annotation>
					<documentation>Third switch, determine when ma97_scaling3 is enabled. 
If ma97_scaling=dynamic, ma97_scaling3 is enabled according to this condition. The default value for this string option is "never". 
Possible values:
never: Scaling is never enabled.
at_start: Scaling to be used from the very start.
at_start_reuse: Scaling to be used on first iteration, then reused thereafter.
on_demand: Scaling to be used after Ipopt request improved solution (i.e. iterative refinement has failed).
on_demand_reuse: As on_demand, but reuse scaling from previous itr
high_delay: Scaling to be used after more than 0.05*n delays are present
high_delay_reuse: Scaling to be used only when previous itr created more that 0.05*n additional delays, otherwise reuse scaling from previous itr
od_hd: Combination of on_demand and high_delay
od_hd_reuse: Combination of on_demand_reuse and high_delay_reuse</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="never"/>
						<enumeration value="at_start"/>
						<enumeration value="at_start_reuse"/>
						<enumeration value="on_demand"/>
						<enumeration value="on_demand_reuse"/>
						<enumeration value="high_delay"/>
						<enumeration value="high_delay_reuse"/>
						<enumeration value="od_hd"/>
						<enumeration value="od_hd_reuse"/>
					</restriction>
				</simpleType>
			</element>
			<element name="ma97_u" type="double" default="1e-8" minOccurs="0">
				<annotation>
					<documentation>Pivoting Threshold 
See MA97 documentation. The valid range for this real option is  [0, 0.5] and its default value is  1e-8.</documentation>
				</annotation>
			</element>
			<element name="ma97_umax" type="double" default="0.0001" minOccurs="0">
				<annotation>
					<documentation>Maximum Pivoting Threshold 
See MA97 documentation. The valid range for this real option is  [0, 0.5] and its default value is 0.0001.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="MUMPSComplexType">
		<sequence>
			<element name="mumps_pivtol" type="double" default="1e-6" minOccurs="0">
				<annotation>
					<documentation>Pivot tolerance for the linear solver MUMPS. 
A smaller number pivots for sparsity, a larger number pivots for stability. This option is only available if Ipopt has been compiled with MUMPS. The valid range for this real option is [0,1] and its default value is  1e-6.</documentation>
				</annotation>
			</element>
			<element name="mumps_pivtolmax" type="double" default="0.1" minOccurs="0">
				<annotation>
					<documentation>Maximum pivot tolerance for the linear solver MUMPS. 
Ipopt may increase pivtol as high as pivtolmax to get a more accurate solution to the linear system. This option is only available if Ipopt has been compiled with MUMPS. The valid range for this real option is  [0,1] and its default value is 0.1</documentation>
				</annotation>
			</element>
			<element name="mumps_mem_percent" type="int" default="1000" minOccurs="0">
				<annotation>
					<documentation>Percentage increase in the estimated working space for MUMPS. 
In MUMPS when significant extra fill-in is caused by numerical pivoting, larger values of mumps_mem_percent may help use the workspace more efficiently. On the other hand, if memory requirement are too large at the very beginning of the optimization, choosing a much smaller value for this option, such as 5, might reduce memory requirements. The valid range for this integer option is [0, inf] and its default value is 1000.</documentation>
				</annotation>
			</element>
			<element name="mumps_permuting_scaling" type="int" default="7" minOccurs="0">
				<annotation>
					<documentation>Controls permuting and scaling in MUMPS 
This is ICNTL(6) in MUMPS. The valid range for this integer option is  [0,7] and its default value is 7.</documentation>
				</annotation>
			</element>
			<element name="mumps_pivot_order" type="int" default="7" minOccurs="0">
				<annotation>
					<documentation>Controls pivot order in MUMPS 
This is ICNTL(7) in MUMPS. The valid range for this integer option is [0, 7] and its default value is 7.</documentation>
				</annotation>
			</element>
			<element name="mumps_scaling" type="int" default="77" minOccurs="0">
				<annotation>
					<documentation>Controls scaling in MUMPS 
This is ICNTL(8) in MUMPS. The valid range for this integer option is [-2,77] and its default value is 77.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="PardisoComplexType">
		<sequence>
			<element name="pardiso_matching_strategy" default="complete+2x2" minOccurs="0">
				<annotation>
					<documentation>Matching strategy to be used by Pardiso 
This is IPAR(13) in Pardiso manual. The default value for this string option is "complete+2x2". 
Possible values:
complete: Match complete (IPAR(13)=1)
complete+2x2: Match complete+2x2 (IPAR(13)=2)
constraints: Match constraints (IPAR(13)=3)</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="complete"/>
						<enumeration value="complete+2x2"/>
						<enumeration value="constraints"/>
					</restriction>
				</simpleType>
			</element>
			<element name="pardiso_max_iterative_refinement_steps" type="int" default="0" minOccurs="0">
				<annotation>
					<documentation>Limit on number of iterative refinement steps. 
The solver does not perform more than the absolute value of this value steps of iterative refinement and stops the process if a satisfactory level of accuracy of the solution in terms of backward error is achieved. If negative, the accumulation of the residue uses extended precision real and complex data types. Perturbed pivots result in iterative refinement. The solver automatically performs two steps of iterative refinements when perturbed pivots are obtained during the numerical factorization and this option is set to 0. The valid range for this integer option is [-inf, inf] and its default value is 0 .</documentation>
				</annotation>
			</element>
			<element name="pardiso_msglvl" type="int" default="0" minOccurs="0">
				<annotation>
					<documentation>Pardiso message level 
This determines the amount of analysis output from the Pardiso solver. This is MSGLVL in the Pardiso manual. The valid range for this integer option is  [0, inf] and its default value is 0 .</documentation>
				</annotation>
			</element>
			<element name="pardiso_order" default="five" minOccurs="0">
				<annotation>
					<documentation>Controls the fill-in reduction ordering algorithm for the input matrix. 
The default value for this string option is "five". 
Possible values:
amd: minimum degree algorithm
one: undocumented
metis: MeTiS nested dissection algorithm
pmetis: parallel (OpenMP) version of MeTiS nested dissection algorithm
four: undocumented
five: undocumented</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="amd"/>
						<enumeration value="one"/>
						<enumeration value="metis"/>
						<enumeration value="pmetis"/>
						<enumeration value="four"/>
						<enumeration value="five"/>
					</restriction>
				</simpleType>
			</element>
		</sequence>
	</complexType>
	<complexType name="IPOPTQuasiNewtonComplexType">
		<sequence>
			<element name="limited_memory_max_history" type="rtc:ExternalIntegerSimpleType" default="4" minOccurs="0">
				<annotation>
					<documentation>Maximum size of the history for the limited quasi-Newton Hessian
approximation</documentation>
				</annotation>
			</element>
			<element name="limited_memory_max_skipping" type="rtc:ExternalIntegerSimpleType" default="2" minOccurs="0">
				<annotation>
					<documentation>Threshold for successive iterations where update is skipped</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="IPOPTDerivativeCheckerComplexType">
		<sequence>
			<element name="derivative_test" default="none" minOccurs="0">
				<annotation>
					<documentation>Enable derivative checker</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="none"/>
						<enumeration value="first-order"/>
					</restriction>
				</simpleType>
			</element>
			<element name="derivative_test_perturbation" default="1e-8" minOccurs="0">
				<annotation>
					<documentation>Size of the finite difference perturbation in derivative test</documentation>
				</annotation>
				<simpleType>
					<restriction base="double">
						<minExclusive value="0.0"/>
					</restriction>
				</simpleType>
			</element>
			<element name="derivative_test_tol" default="0.0001" minOccurs="0">
				<annotation>
					<documentation>Threshold for indicating wrong derivative</documentation>
				</annotation>
				<simpleType>
					<restriction base="double">
						<minExclusive value="0.0"/>
					</restriction>
				</simpleType>
			</element>
			<element name="derivative_test_print_all" default="no" minOccurs="0">
				<annotation>
					<documentation>Indicates whether information for all estimated derivatives should be
   printed</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="yes"/>
						<enumeration value="no"/>
					</restriction>
				</simpleType>
			</element>
			<element name="jacobian_approximation" default="exact" minOccurs="0">
				<annotation>
					<documentation>Specifies technique to compute constraint Jacobian</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="exact"/>
						<enumeration value="finite-difference-values"/>
					</restriction>
				</simpleType>
			</element>
			<element name="findiff_perturbation" default="1e-7" minOccurs="0">
				<annotation>
					<documentation>Size of the finite difference perturbation for derivative approximation</documentation>
				</annotation>
				<simpleType>
					<restriction base="double">
						<minExclusive value="0.0"/>
					</restriction>
				</simpleType>
			</element>
		</sequence>
	</complexType>
	<complexType name="IPOPTHessianPermutationComplexType">
		<sequence>
			<element name="min_hessian_perturbation" type="double" default="1e-20" minOccurs="0">
				<annotation>
					<documentation>Smallest perturbation of the Hessian block. 
The size of the perturbation of the Hessian block is never selected smaller than this value, unless no perturbation is necessary. (This is delta_wmin in implementation paper.) The valid range for this real option is  [0, +inf] and its default value is  1e-20</documentation>
				</annotation>
			</element>
			<element name="max_hessian_perturbation" type="double" default="1e20" minOccurs="0">
				<annotation>
					<documentation>This parameter gives the maximum value of the regularization parameter. If a regularization of that size is not enough, the algorithm skips this iteration and goes to the restoration phase. (This is delta_wmax in the implementation paper.) The valid range for this real option is [0,+inf] and its default value is 1e+20.</documentation>
				</annotation>
			</element>
			<element name="first_hessian_perturbation" type="double" default="0.0001" minOccurs="0">
				<annotation>
					<documentation>Size of first x-s perturbation tried. 
The first value tried for the x-s perturbation in the inertia correction scheme.(This is delta_0 in the implementation paper.) The valid range for this real option is  [0, inf] and its default value is 1e4.</documentation>
				</annotation>
			</element>
			<element name="perturb_inc_fact_first" type="double" default="100" minOccurs="0">
				<annotation>
					<documentation>Increase factor for x-s perturbation for very first perturbation. 
The factor by which the perturbation is increased when a trial value was not sufficient - this value is used for the computation of the very first perturbation and allows a different value for for the first perturbation than that used for the remaining perturbations. (This is bar_kappa_w+ in the implementation paper.) The valid range for this real option is [1,inf] and its default value is100.</documentation>
				</annotation>
			</element>
			<element name="perturb_inc_fact" type="double" default="8" minOccurs="0">
				<annotation>
					<documentation>Increase factor for x-s perturbation. 
The factor by which the perturbation is increased when a trial value was not sufficient - this value is used for the computation of all perturbations except for the first. (This is kappa_w+ in the implementation paper.) The valid range for this real option is [0, inf] and its default value is 8.</documentation>
				</annotation>
			</element>
			<element name="perturb_dec_fact" type="double" default="0.333333" minOccurs="0">
				<annotation>
					<documentation>Decrease factor for x-s perturbation. 
The factor by which the perturbation is decreased when a trial value is deduced from the size of the most recent successful perturbation. (This is kappa_w- in the implementation paper.) The valid range for this real option is [0, inf] and its default value is 0.333333.</documentation>
				</annotation>
			</element>
			<element name="jacobian_regularization_value" type="double" default="1e-8" minOccurs="0">
				<annotation>
					<documentation>Size of the regularization for rank-deficient constraint Jacobians. 
(This is bar delta_c in the implementation paper.) The valid range for this real option is [0, inf] and its default value is 1e-8. .</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="IPOPTRestorationPhaseComplexType">
		<sequence>
			<element name="expect_infeasible_problem" default="no" minOccurs="0">
				<annotation>
					<documentation>Enable heuristics to quickly detect an infeasible problem. 
This options is meant to activate heuristics that may speed up the infeasibility determination if you expect that there is a good chance for the problem to be infeasible. In the filter line search procedure, the restoration phase is called more quickly than usually, and more reduction in the constraint violation is enforced before the restoration phase is left. If the problem is square, this option is enabled automatically. The default value for this string option is "no". 
Possible values:
no: the problem probably be feasible
yes: the problem has a good chance to be infeasible</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="no"/>
						<enumeration value="yes"/>
					</restriction>
				</simpleType>
			</element>
			<element name="expect_infeasible_problem_ctol" type="double" default="0.001" minOccurs="0">
				<annotation>
					<documentation>Threshold for disabling "expect_infeasible_problem" option. 
If the constraint violation becomes smaller than this threshold, the "expect_infeasible_problem" heuristics in the filter line search are disabled. If the problem is square, this options is set to 0. The valid range for this real option is [0, inf] and its default value is 0.001.</documentation>
				</annotation>
			</element>
			<element name="expect_infeasible_problem_ytol" type="double" default="1e8" minOccurs="0">
				<annotation>
					<documentation>Multiplier threshold for activating "expect_infeasible_problem" option. 
If the max norm of the constraint multipliers becomes larger than this value and "expect_infeasible_problem" is chosen, then the restoration phase is entered. The valid range for this real option is [0, inf] and its default value is  1e8.</documentation>
				</annotation>
			</element>
			<element name="start_with_resto" default="no" minOccurs="0">
				<annotation>
					<documentation>Tells algorithm to switch to restoration phase in first iteration. 
Setting this option to "yes" forces the algorithm to switch to the feasibility restoration phase in the first iteration. If the initial point is feasible, the algorithm will abort with a failure. The default value for this string option is "no". 
Possible values:
no: don't force start in restoration phase
yes: force start in restoration phase</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="no"/>
						<enumeration value="yes"/>
					</restriction>
				</simpleType>
			</element>
			<element name="soft_resto_pderror_reduction_factor" type="double" default="0.9999" minOccurs="0">
				<annotation>
					<documentation>Required reduction in primal-dual error in the soft restoration phase. 
The soft restoration phase attempts to reduce the primal-dual error with regular steps. If the damped primal-dual step (damped only to satisfy the fraction-to-the-boundary rule) is not decreasing the primal-dual error by at least this factor, then the regular restoration phase is called. Choosing "0" here disables the soft restoration phase. The valid range for this real option is [0, inf] and its default value is 0.9999 .</documentation>
				</annotation>
			</element>
			<element name="required_infeasibility_reduction" type="double" default="0.9" minOccurs="0">
				<annotation>
					<documentation>Required reduction of infeasibility before leaving restoration phase. 
The restoration phase algorithm is performed, until a point is found that is acceptable to the filter and the infeasibility has been reduced by at least the fraction given by this option. The valid range for this real option is [0, inf] and its default value is 0.9 .</documentation>
				</annotation>
			</element>
			<element name="bound_mult_reset_threshold" type="double" default="1000" minOccurs="0">
				<annotation>
					<documentation>Threshold for resetting bound multipliers after the restoration phase. 
After returning from the restoration phase, the bound multipliers are updated with a Newton step for complementarity. Here, the change in the primal variables during the entire restoration phase is taken to be the corresponding primal Newton step. However, if after the update the largest bound multiplier exceeds the threshold specified by this option, the multipliers are all reset to 1. The valid range for this real option is [0, inf] and its default value is 1000 .</documentation>
				</annotation>
			</element>
			<element name="constr_mult_reset_threshold" type="double" default="0" minOccurs="0">
				<annotation>
					<documentation>Threshold for resetting equality and inequality multipliers after restoration phase. 
After returning from the restoration phase, the constraint multipliers are recomputed by a least square estimate. This option triggers when those least-square estimates should be ignored. The valid range for this real option is  [0, inf] and its default value is 0 .</documentation>
				</annotation>
			</element>
			<element name="evaluate_orig_obj_at_resto_trial" default="yes" minOccurs="0">
				<annotation>
					<documentation>Determines if the original objective function should be evaluated at restoration phase trial points. 
Setting this option to "yes" makes the restoration phase algorithm evaluate the objective function of the original problem at every trial point encountered during the restoration phase, even if this value is not required. In this way, it is guaranteed that the original objective function can be evaluated without error at all accepted iterates; otherwise the algorithm might fail at a point where the restoration phase accepts an iterate that is good for the restoration phase problem, but not the original problem. On the other hand, if the evaluation of the original objective is expensive, this might be costly. The default value for this string option is "yes". 
Possible values:
no: skip evaluation
yes: evaluate at every trial point</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="no"/>
						<enumeration value="yes"/>
					</restriction>
				</simpleType>
			</element>
		</sequence>
	</complexType>
	<complexType name="IPOPTMultiplierUpdatesComplexType">
		<sequence>
			<element name="alpha_for_y" default="primal" minOccurs="0">
				<annotation>
					<documentation>Method to determine the step size for constraint multipliers. 
This option determines how the step size (alpha_y) will be calculated when updating the constraint multipliers. The default value for this string option is "primal". 
Possible values:
primal: use primal step size
bound-mult: use step size for the bound multipliers (good for LPs)
min: use the min of primal and bound multipliers
max: use the max of primal and bound multipliers
full: take a full step of size one
min-dual-infeas: choose step size minimizing new dual infeasibility
safer-min-dual-infeas: like "min_dual_infeas", but safeguarded by "min" and "max"
primal-and-full: use the primal step size, and full step if delta_x smaller or equal than alpha_for_y_tol
dual-and-full: use the dual step size, and full step if delta_x smaller or equal than alpha_for_y_tol
acceptor: Call LSAcceptor to get step size for y</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="primal"/>
						<enumeration value="bound-mult"/>
						<enumeration value="min"/>
						<enumeration value="max"/>
						<enumeration value="full"/>
						<enumeration value="min-dual-infeas"/>
						<enumeration value="safer-min-dual-infeas"/>
						<enumeration value="primal-and-full"/>
						<enumeration value="dual-and-full"/>
						<enumeration value="acceptor"/>
					</restriction>
				</simpleType>
			</element>
			<element name="alpha_for_y_tol" type="double" default="10" minOccurs="0">
				<annotation>
					<documentation>Tolerance for switching to full equality multiplier steps. 
This is only relevant if "alpha_for_y" is chosen "primal-and-full" or "dual-and-full". The step size for the equality constraint multipliers is taken to be one if the max-norm of the primal step is less than this tolerance. The valid range for this real option is  [0, inf] and its default value is 10.</documentation>
				</annotation>
			</element>
			<element name="recalc_y" default="yes" minOccurs="0">
				<annotation>
					<documentation>Tells the algorithm to recalculate the equality and inequality multipliers as least square estimates. 
This asks the algorithm to recompute the multipliers, whenever the current infeasibility is less than recalc_y_feas_tol. Choosing yes might be helpful in the quasi-Newton option. However, each recalculation requires an extra factorization of the linear system. If a limited memory quasi-Newton option is chosen, this is used by default. The default value for this string option is "no". 
Possible values:
no: use the Newton step to update the multipliers
yes: use least-square multiplier estimates</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="no"/>
						<enumeration value="yes"/>
					</restriction>
				</simpleType>
			</element>
			<element name="recalc_y_feas_tol" type="double" default="1e-6" minOccurs="0">
				<annotation>
					<documentation>Feasibility threshold for recomputation of multipliers. 
If recalc_y is chosen and the current infeasibility is less than this value, then the multipliers are recomputed. The valid range for this real option is [0, inf] and its default value is 1e-6.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="IPOPTLineSearchComplexType">
		<sequence>
			<element name="max_soc" type="int" default="4" minOccurs="0">
				<annotation>
					<documentation>Maximum number of second order correction trial steps at each iteration. 
Choosing 0 disables the second order corrections. (This is pmax of Step A-5.9 of Algorithm A in the implementation paper.) The valid range for this integer option is  [0, inf] and its default value is 4 .</documentation>
				</annotation>
			</element>
			<element name="watchdog_shortened_iter_trigger" type="int" default="10" minOccurs="0">
				<annotation>
					<documentation>Number of shortened iterations that trigger the watchdog. 
If the number of successive iterations in which the backtracking line search did not accept the first trial point exceeds this number, the watchdog procedure is activated. Choosing "0" here disables the watchdog procedure. The valid range for this integer option is  [0,inf] and its default value is 10.</documentation>
				</annotation>
			</element>
			<element name="watchdog_trial_iter_max" type="int" default="3" minOccurs="0">
				<annotation>
					<documentation>Maximum number of watchdog iterations. 
This option determines the number of trial iterations allowed before the watchdog procedure is aborted and the algorithm returns to the stored point. The valid range for this integer option is [1, inf] and its default value is 3. </documentation>
				</annotation>
			</element>
			<element name="accept_every_trial_step" default="no" minOccurs="0">
				<annotation>
					<documentation>Always accept the first trial step. 
Setting this option to "yes" essentially disables the line search and makes the algorithm take aggressive steps, without global convergence guarantees. The default value for this string option is "no". 
Possible values:
no: don't arbitrarily accept the full step
yes: always accept the full step</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="no"/>
						<enumeration value="yes"/>
					</restriction>
				</simpleType>
			</element>
		</sequence>
	</complexType>
	<complexType name="IPOPTWarmStartComplexType">
		<sequence>
			<element name="warm_start_init_point" default="no" minOccurs="0">
				<annotation>
					<documentation>Warm-start for initial point 
Indicates whether this optimization should use a warm start initialization, where values of primal and dual variables are given (e.g., from a previous optimization of a related problem.) The default value for this string option is "no". 
Possible values:
no: do not use the warm start initialization
yes: use the warm start initialization</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="no"/>
						<enumeration value="yes"/>
					</restriction>
				</simpleType>
			</element>
			<element name="warm_start_bound_frac" type="double" default="0.001" minOccurs="0">
				<annotation>
					<documentation>same as bound_frac for the regular initializer. 
The valid range for this real option is [0,0.5] and its default value is 0.001.</documentation>
				</annotation>
			</element>
			<element name="warm_start_bound_push" type="double" default="0.001" minOccurs="0">
				<annotation>
					<documentation>same as bound_push for the regular initializer. 
The valid range for this real option is [0, inf] and its default value is 0.001.</documentation>
				</annotation>
			</element>
			<element name="warm_start_slack_bound_frac" type="double" default="0.001" minOccurs="0">
				<annotation>
					<documentation>same as slack_bound_frac for the regular initializer. 
The valid range for this real option is   [0,0.5] and its default value is 0.001.</documentation>
				</annotation>
			</element>
			<element name="warm_start_slack_bound_push" type="double" default="0.001" minOccurs="0">
				<annotation>
					<documentation>same as slack_bound_push for the regular initializer. 
The valid range for this real option is [0, inf] and its default value is 0.001.</documentation>
				</annotation>
			</element>
			<element name="warm_start_mult_bound_push" type="double" default="0.001" minOccurs="0">
				<annotation>
					<documentation>same as mult_bound_push for the regular initializer. 
The valid range for this real option is [0, inf] and its default value is 0.001.</documentation>
				</annotation>
			</element>
			<element name="warm_start_mult_init_max" type="double" default="1e6" minOccurs="0">
				<annotation>
					<documentation>Maximum initial value for the equality multipliers. 
The valid range for this real option is [-inf, +inf] and its default value is  1e6.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="IPOPTInitializationComplexType">
		<sequence>
			<element name="bound_frac" type="double" default="0.01" minOccurs="0">
				<annotation>
					<documentation>Desired minimum relative distance from the initial point to bound. 
Determines how much the initial point might have to be modified in order to be sufficiently inside the bounds (together with "bound_push"). (This is kappa_2 in Section 3.6 of implementation paper.) The valid range for this real option is [0, 0.5]and its default value is 0.01..</documentation>
				</annotation>
			</element>
			<element name="bound_push" type="double" default="0.01" minOccurs="0">
				<annotation>
					<documentation>Desired minimum absolute distance from the initial point to bound. 
Determines how much the initial point might have to be modified in order to be sufficiently inside the bounds (together with "bound_frac"). (This is kappa_1 in Section 3.6 of implementation paper.) The valid range for this real option is [0, inf] and its default value is 0.01.</documentation>
				</annotation>
			</element>
			<element name="slack_bound_frac" type="double" default="0.01" minOccurs="0">
				<annotation>
					<documentation>Desired minimum relative distance from the initial slack to bound. 
Determines how much the initial slack variables might have to be modified in order to be sufficiently inside the inequality bounds (together with "slack_bound_push"). (This is kappa_2 in Section 3.6 of implementation paper.) The valid range for this real option is  [0, 0.5] and its default value is 0.01.</documentation>
				</annotation>
			</element>
			<element name="slack_bound_push" type="double" default="0.01" minOccurs="0">
				<annotation>
					<documentation>Desired minimum absolute distance from the initial slack to bound. 
Determines how much the initial slack variables might have to be modified in order to be sufficiently inside the inequality bounds (together with "slack_bound_frac"). (This is kappa_1 in Section 3.6 of implementation paper.) The valid range for this real option is  [0, inf] and its default value is 0.01.</documentation>
				</annotation>
			</element>
			<element name="bound_mult_init_val" type="double" default="1" minOccurs="0">
				<annotation>
					<documentation>Initial value for the bound multipliers. 
All dual variables corresponding to bound constraints are initialized to this value. The valid range for this real option is  [0, inf] and its default value is 1.</documentation>
				</annotation>
			</element>
			<element name="constr_mult_init_max" type="double" default="1000" minOccurs="0">
				<annotation>
					<documentation>Maximum allowed least-square guess of constraint multipliers. 
Determines how large the initial least-square guesses of the constraint multipliers are allowed to be (in max-norm). If the guess is larger than this value, it is discarded and all constraint multipliers are set to zero. This options is also used when initializing the restoration phase. By default, "resto.constr_mult_init_max" (the one used in RestoIterateInitializer) is set to zero. The valid range for this real option is [0, inf] and its default value is 1000.</documentation>
				</annotation>
			</element>
			<element name="bound_mult_init_method" default="constant" minOccurs="0">
				<annotation>
					<documentation>Initialization method for bound multipliers 
This option defines how the iterates for the bound multipliers are initialized. If "constant" is chosen, then all bound multipliers are initialized to the value of "bound_mult_init_val". If "mu-based" is chosen, the each value is initialized to the the value of "mu_init" divided by the corresponding slack variable. This latter option might be useful if the starting point is close to the optimal solution. The default value for this string option is "constant". 
Possible values:
constant: set all bound multipliers to the value of bound_mult_init_val
mu-based: initialize to mu_init/x_slack</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="constant"/>
						<enumeration value="mu-based"/>
					</restriction>
				</simpleType>
			</element>
		</sequence>
	</complexType>
	<complexType name="IPOPTBarrierParameterComplexType">
		<sequence>
			<element name="mehrotra_algorithm" default="no" minOccurs="0">
				<annotation>
					<documentation>Indicates if we want to do Mehrotra's algorithm. 
If set to yes, Ipopt runs as Mehrotra's predictor-corrector algorithm. This works usually very well for LPs and convex QPs. This automatically disables the line search, and chooses the (unglobalized) adaptive mu strategy with the "probing" oracle, and uses "corrector_type=affine" without any safeguards; you should not set any of those options explicitly in addition. Also, unless otherwise specified, the values of "bound_push", "bound_frac", and "bound_mult_init_val" are set more aggressive, and sets "alpha_for_y=bound_mult". The default value for this string option is "no". 
Possible values:
no: Do the usual Ipopt algorithm.
yes: Do Mehrotra's predictor-corrector algorithm.</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="no"/>
						<enumeration value="yes"/>
					</restriction>
				</simpleType>
			</element>
			<element name="mu_strategy" default="adaptive" minOccurs="0">
				<annotation>
					<documentation>Update strategy for barrier parameter. 
Determines which barrier parameter update strategy is to be used. The default value for this string option is "monotone". 
Possible values:
monotone: use the monotone (Fiacco-McCormick) strategy
adaptive: use the adaptive update strategy</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="monotone"/>
						<enumeration value="adaptive"/>
					</restriction>
				</simpleType>
			</element>
			<element name="mu_oracle" default="quality-function" minOccurs="0">
				<annotation>
					<documentation>Oracle for a new barrier parameter in the adaptive strategy. 
Determines how a new barrier parameter is computed in each "free-mode" iteration of the adaptive barrier parameter strategy. (Only considered if "adaptive" is selected for option "mu_strategy"). The default value for this string option is "quality-function". 
Possible values:
probing: Mehrotra's probing heuristic
loqo: LOQO's centrality rule
quality-function: minimize a quality function</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="probing"/>
						<enumeration value="loqo"/>
						<enumeration value="quality-function"/>
					</restriction>
				</simpleType>
			</element>
			<element name="quality_function_max_section_steps" type="int" default="8" minOccurs="0">
				<annotation>
					<documentation>Maximum number of search steps during direct search procedure determining the optimal centering parameter. 
The golden section search is performed for the quality function based mu oracle. (Only used if option "mu_oracle" is set to "quality-function".) The valid range for this integer option is [0, inf] and its default value is 8.</documentation>
				</annotation>
			</element>
			<element name="fixed_mu_oracle" default="average_compl" minOccurs="0">
				<annotation>
					<documentation>Oracle for the barrier parameter when switching to fixed mode. 
Determines how the first value of the barrier parameter should be computed when switching to the "monotone mode" in the adaptive strategy. (Only considered if "adaptive" is selected for option "mu_strategy".) The default value for this string option is "average_compl". 
Possible values:
probing: Mehrotra's probing heuristic
loqo: LOQO's centrality rule
quality-function: minimize a quality function
average_compl: base on current average complementarity</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="probing"/>
						<enumeration value="loqo"/>
						<enumeration value="quality-function"/>
						<enumeration value="average_compl"/>
					</restriction>
				</simpleType>
			</element>
			<element name="adaptive_mu_globalization" default="obj-constr-filter" minOccurs="0">
				<annotation>
					<documentation>Globalization strategy for the adaptive mu selection mode. 
To achieve global convergence of the adaptive version, the algorithm has to switch to the monotone mode (Fiacco-McCormick approach) when convergence does not seem to appear. This option sets the criterion used to decide when to do this switch. (Only used if option "mu_strategy" is chosen as "adaptive".) The default value for this string option is "obj-constr-filter". 
Possible values:
kkt-error: nonmonotone decrease of kkt-error
obj-constr-filter: 2-dim filter for objective and constraint violation
never-monotone-mode: disables globalization</documentation>
				</annotation>
				<simpleType>
					<restriction base="string">
						<enumeration value="kkt-error"/>
						<enumeration value="obj-constr-filter"/>
						<enumeration value="never-monotone-mode"/>
					</restriction>
				</simpleType>
			</element>
			<element name="mu_init" type="double" default="0.1" minOccurs="0">
				<annotation>
					<documentation>Initial value for the barrier parameter. 
This option determines the initial value for the barrier parameter (mu). It is only relevant in the monotone, Fiacco-McCormick version of the algorithm. (i.e., if "mu_strategy" is chosen as "monotone") The valid range for this real option is [0,inf] and its default value is0.1..</documentation>
				</annotation>
			</element>
			<element name="mu_max_fact" type="double" default="1000" minOccurs="0">
				<annotation>
					<documentation>Factor for initialization of maximum value for barrier parameter. 
This option determines the upper bound on the barrier parameter. This upper bound is computed as the average complementarity at the initial point times the value of this option. (Only used if option "mu_strategy" is chosen as "adaptive".) The valid range for this real option is [0, inf] and its default value is 1000.</documentation>
				</annotation>
			</element>
			<element name="mu_max" type="double" default="100000" minOccurs="0">
				<annotation>
					<documentation>Maximum value for barrier parameter. 
This option specifies an upper bound on the barrier parameter in the adaptive mu selection mode. If this option is set, it overwrites the effect of mu_max_fact. (Only used if option "mu_strategy" is chosen as "adaptive".) The valid range for this real option is [0, inf] and its default value is 100000.</documentation>
				</annotation>
			</element>
			<element name="mu_min" type="double" default="1e-11" minOccurs="0">
				<annotation>
					<documentation>Minimum value for barrier parameter. 
This option specifies the lower bound on the barrier parameter in the adaptive mu selection mode. By default, it is set to the minimum of 1e-11 and min("tol","compl_inf_tol")/("barrier_tol_factor"+1), which should be a reasonable value. (Only used if option "mu_strategy" is chosen as "adaptive".) The valid range for this real option is  [0, inf] and its default value is 1e-11.</documentation>
				</annotation>
			</element>
			<element name="mu_target" type="double" default="0" minOccurs="0">
				<annotation>
					<documentation>Desired value of complementarity. 
Usually, the barrier parameter is driven to zero and the termination test for complementarity is measured with respect to zero complementarity. However, in some cases it might be desired to have Ipopt solve barrier problem for strictly positive value of the barrier parameter. In this case, the value of "mu_target" specifies the final value of the barrier parameter, and the termination tests are then defined with respect to the barrier problem for this value of the barrier parameter. The valid range for this real option is [0, inf] and its default value is 0.</documentation>
				</annotation>
			</element>
			<element name="barrier_tol_factor" type="double" default="10" minOccurs="0">
				<annotation>
					<documentation>Factor for mu in barrier stop test. 
The convergence tolerance for each barrier problem in the monotone mode is the value of the barrier parameter times "barrier_tol_factor". This option is also used in the adaptive mu strategy during the monotone mode. (This is kappa_epsilon in implementation paper). The valid range for this real option is [0, inf]and its default value is 10.</documentation>
				</annotation>
			</element>
			<element name="mu_linear_decrease_factor" type="double" default="0.2" minOccurs="0">
				<annotation>
					<documentation>Determines linear decrease rate of barrier parameter. 
For the Fiacco-McCormick update procedure the new barrier parameter mu is obtained by taking the minimum of mu*"mu_linear_decrease_factor" and mu"superlinear_decrease_power". (This is kappa_mu in implementation paper.) This option is also used in the adaptive mu strategy during the monotone mode. The valid range for this real option is[0,1] and its default value is 0.2</documentation>
				</annotation>
			</element>
			<element name="mu_superlinear_decrease_power" type="double" default="1.5" minOccurs="0">
				<annotation>
					<documentation>Determines superlinear decrease rate of barrier parameter. 
For the Fiacco-McCormick update procedure the new barrier parameter mu is obtained by taking the minimum of mu*"mu_linear_decrease_factor" and mu"superlinear_decrease_power". (This is theta_mu in implementation paper.) This option is also used in the adaptive mu strategy during the monotone mode. The valid range for this real option is  [1,2] and its default value is 1.5.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="SAComplexType">
		<sequence>
			<element name="ftoll" type="rtc:ExternalParameterSimpleType" default="0.001" minOccurs="0">
				<annotation>
					<documentation>???</documentation>
				</annotation>
			</element>
			<element name="dels" type="rtc:ExternalParameterSimpleType" default="0.5" minOccurs="0">
				<annotation>
					<documentation>???</documentation>
				</annotation>
			</element>
			<element name="max_iter" type="integer" default="3000" minOccurs="0">
				<annotation>
					<documentation>Maximum number of iterations</documentation>
				</annotation>
			</element>
			<element name="max_cpu_time" type="rtc:ExternalParameterSimpleType" default="60.0" minOccurs="0">
				<annotation>
					<documentation>maximum cpu time for executing the optimization</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="LoggingComplexType">
		<sequence>
			<element name="logLevel" type="rtc:ExternalIntegerSimpleType" default="2">
				<annotation>
					<documentation>definition of the logging level, 0 = fatal error, 1 = error, 2 = warning, 3 = info, 4 = debug messages</documentation>
				</annotation>
			</element>
			<element name="eventCode" type="rtc:ExternalBooleanSimpleType" default="false" minOccurs="0"/>
			<element name="flushing" type="rtc:ExternalBooleanSimpleType" default="false">
				<annotation>
					<documentation>set flushing of the diagnostics file after each new message (=true) or at the end of the program execution (=false)</documentation>
				</annotation>
			</element>
			<element name="constraintViolationTolerance" type="rtc:ExternalParameterSimpleType" default="1e-4" minOccurs="0">
				<annotation>
					<documentation>tolerance for scaled constraints for which a constraint violation is detected</documentation>
				</annotation>
			</element>
			<element name="reportConstraintViolation" minOccurs="0">
				<annotation>
					<documentation>report constraint violation in diagnostics</documentation>
				</annotation>
				<complexType>
					<attribute name="level" type="rtc:ExternalIntegerSimpleType" default="2">
						<annotation>
							<documentation>constraint violation is reported as 0 = fatal error, 1 = error, 2 = warning, 3 = info, 4 = debug messages</documentation>
						</annotation>
					</attribute>
				</complexType>
			</element>
			<element name="outputObjectiveFunction" type="rtc:FunctionOutputEnumStringType" default="NONE" minOccurs="0"/>
			<element name="outputConstraints" type="rtc:FunctionOutputEnumStringType" default="NONE" minOccurs="0"/>
		</sequence>
	</complexType>
	<complexType name="UserDefinedStateExportComplexType">
		<sequence>
			<element name="startDate" type="rtc:DateTimeComplexType">
				<annotation>
					<documentation>Start date and time for exporting state files.</documentation>
				</annotation>
			</element>
			<element name="endDate" type="rtc:DateTimeComplexType">
				<annotation>
					<documentation>End date and time for exporting state files.</documentation>
				</annotation>
			</element>		
			<element name="stateTimeStep" type="double" default="-1.0" minOccurs="0">
				<annotation>
					<documentation>Step in seconds for exporting state files</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="ModeClosedLoopComplexType">
		<sequence>
			<element name="recedingHorizon" type="integer" default="1">
				<annotation>
					<documentation>Number of time steps after which the optimization is repeated</documentation>
				</annotation>
			</element>
			<element name="forecastHorizon" type="integer" default="1">
				<annotation>
					<documentation>Number of time steps of forecasts in the predictive control mode</documentation>
				</annotation>
			</element>
			<element name="optimization" type="rtc:ModeOptimizationComplexType"/>
		</sequence>
	</complexType>
	<complexType name="ParallelizationComplexType">
		<sequence>
			<element name="nThread" type="int" minOccurs="0"/>
			<element name="simulation" type="rtc:ParallelModeEnumStringType" default="NONE" minOccurs="0"/>
			<element name="constraints" type="rtc:ParallelModeEnumStringType" default="NONE" minOccurs="0"/>
		</sequence>
	</complexType>
	<simpleType name="ParallelModeEnumStringType">
		<restriction base="string">
			<enumeration value="NONE"/>
			<enumeration value="ENSEMBLE"/>
			<enumeration value="INTERNAL"/>
			<enumeration value="ENSEMBLE+INTERNAL"/>
		</restriction>
	</simpleType>
	<simpleType name="OptimizerModeEnumStringType">
		<restriction base="string">
			<enumeration value="SEQUENTIAL"/>
			<enumeration value="PARALLEL"/>
		</restriction>
	</simpleType>
	<simpleType name="ParameterFileTypeEnumStringType">
		<restriction base="string">
			<enumeration value="TREEVECTOR"/>
			<enumeration value="PIMODELPARAMETERS"/>
		</restriction>
	</simpleType>
	<simpleType name="ParameterFilePrefixEnumStringType">
		<restriction base="string">
			<enumeration value="NONE"/>
			<enumeration value="LOCATIONID"/>
		</restriction>
	</simpleType>
	<simpleType name="PeriodEnumStringType">
		<restriction base="string">
			<enumeration value="COMPLETE"/>
			<enumeration value="UPDATE"/>
			<enumeration value="FORECAST"/>
		</restriction>
	</simpleType>
	<simpleType name="FunctionOutputEnumStringType">
		<restriction base="string">
			<enumeration value="NONE"/>
			<enumeration value="VALUE"/>
			<enumeration value="DERIVATIVE"/>
			<enumeration value="VALUE+DERIVATIVE"/>
		</restriction>
	</simpleType>
</schema>

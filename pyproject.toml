[tool.poetry]
name = "hydrolib"
version = "0.1.0"
description = "Python wrappers around D-HYDRO Suite."
authors = ["Deltares"]
license = "LGPL"

[tool.poetry.dependencies]
python = "^3.8"
pandas = "^1.2.4"
geopandas = "^0.9.0"
xarray = "^0.17.0"
# hydrolib-core = {path = "../HYDROLIB-core"}

[tool.poetry.dev-dependencies]
pytest = "^6.2"
black = { version = "*", allow-prereleases = true }
isort = "^5.8"
mkdocs = "^1.1"
mkdocs-material = "^7.1"
mkdocstrings = "^0.15"
mkdocs-autorefs = "^0.1"
pytest-cov = "^2.11"
pymdown-extensions = "^8.1"
commitizen = "^2.17"
flake8 = "^3.9.2"
mypy = "^0.910"
devtools = "^0.6.1"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.0.1"
tag_format = "$version"
version_files = [
    "hydrolib/post/__init__.py",
    "pyproject.toml:version"
]
changelog_file = "docs/changelog.md"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py37', 'py38']
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | \.virtualenvs
  )/
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88


[tool.poetry2conda]
name = "hydrolib"

[tool.poetry2conda.dependencies]
python = { channel = "conda-forge" }
pandas = { channel = "conda-forge" }
geopandas = { channel = "conda-forge" }
xarray = { channel = "conda-forge" }
